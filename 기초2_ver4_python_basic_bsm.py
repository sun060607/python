# -*- coding: utf-8 -*-
"""기초2.ver4_python_basic_bsm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G1Y00rE1YAqw-B3HJ9Hj9eUgv5ginM23
"""

#해결 문제1
#set으로 출입 명부 만들기
vip_names = ['Newton','Kepler','Euler','Galileo']
room1_list = ['Newton']
room2_list = ['Euler','Galileo']
room1_list=set(room1_list)
room2_list=set(room2_list)
vip_names = set(vip_names)
print(room1_list)
print(room2_list)
print(vip_names - (room1_list|room2_list))

#집합 연산
a = (1,2,2,3,10,20)#튜플
b = [2,10,20,30,30]#리스트

a = set(a)
b = set(b)

print(f"{a} , {b}")
print(f"{a&b}")
print(f"{a | b}")
print(f"{a - b}")
print(f"{b -a}")

#컬렉션 요소 접근
lst = [10,50,30]
tp = ('a','b','c')
for item in lst:
  print(item,end='')
for item in tp:
  print(item, end='')

# 딕셔너리 만들기 : dict() 함수와 zip() 함수 이용
dy = dict(zip(tp,lst))
print(dy)
for item in dy:
  print(f'{item}:{dy[item]}')

"""#내장 함수


*   len(컬렉션명) : 컬렉션 요소 개수
*   max(컬렉션명) : 가장 큰 요소값 반환
    + 딕셔너리인 경우는 키 값 중 가장 큰 요소로 반환
*   min(컬렉션명) : 가장 작은 요소값 반환
    + 딕셔너리인 경우는 키 값 중 가장 작은 요소 반환
*   sum(컬렉션명) : 수치 요소로 이루어진 컬렉션 요소의 합
    + 딕셔너리인 경우는 키 값의 합
*   sorted(컬렉션명) : 컬렉션 요소 정렬
    + 딕셔너리인 경우는 키 값을 정렬하여 키 리스트 반환


"""

# 내장함수
lst = [10,50,30]
print(len(lst))
print(max(lst))

print(min(lst))
print(sum(lst))
print(sorted(lst))
lst.sort()# 안이 바뀜

temp =[10.8, 8.5, 8.7, 7.9, 5.1,
       8.1,8.2,10.4,11,9.9,
       7.8,9.5,11.6,8.2,7.7,
       6.6,11.1,12.2,10.4,
       13.7,14.1,12.6,11.5,13,
       14.5,13.7,9.4,10.4,11.6,12.9
       ]
print(max(temp))
print(min(temp))
print(f'{sum(temp)/len(temp):0.2f}')

y = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]
yavg = [14.9,14.6,14.5,15.3,15.1,15.4,15.7,15.2,15.1,15.7]
ymax = [34.1, 33,34.5,35,32.9,33.5,37.3,36.2,36.4,35]
ymin = [19,18.8,18.6,19.5,19.2,19.5,19.8,19.6,19.2,19.8]
for i in y:
  if i%2==1:
    print(i, end=' ')
print()
ytemp=dict(zip(y,yavg))
print(ytemp)

mintemp=min(ytemp.values())
ryear=[]
for year,temp in ytemp.items():
  if temp==mintemp:
    ryear.append(year)
print(f'{ryear}:{mintemp}')

maxv=max(ymax)
ylist=[]
for i in range(len(ymax)):
  if ymax[i]==maxv:
    ylist.append(y[i])
print(f'{ylist}:{maxv}')
ymlist=[]
minv = min(ymin)
for i in range(len(ymin)):
  if ymin[i] == minv:
    ymlist.append(y[i])
print(f'{ymlist}:{minv}')

from google.colab import drive
drive.mount('/content/drive')

# csv 파일 불러오기
filename = '/content/drive/MyDrive/부산.csv'

import csv
f = open(filename, 'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
print(data)
f.close()

# csv 파일 불러오기
filename = '/content/drive/MyDrive/부산.csv'

import csv
f = open(filename, 'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
print(data)
for row in data:
  print(row)
f.close()

# csv 파일 불러오기
filename = '/content/drive/MyDrive/부산.csv'

import csv
f = open(filename, 'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
header = next(data)
for row in data:
  print(row)
f.close()

"""#3. 부산이 가장 더웠던 날은 언제였을까?

  1. 질문 다듬기<BR>
*부산이 가장 더웠던 날은 언제였을까?*<br>
*얼마나 더웠을까*<br>
"""

# csv 파일 불러오기
filename = '/content/drive/MyDrive/부산.csv'

import csv
f = open(filename, 'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
header = next(data)
for row in data:
  print(row[2])
f.close()

# csv 파일 불러오기
filename = '/content/drive/MyDrive/부산.csv'

import csv
f = open(filename, 'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
header = next(data)
for row in data:
  if row[2] == '':
    row[2] == -999
  print(row[2])
f.close()

# csv 파일 불러오기
filename = '/content/drive/MyDrive/부산.csv'
import csv
f = open(filename, 'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
header = next(data)
max_temp = -999
max_dtae = ''
for row in data:
  if row[2] == '':
    row[2] == -999
  row[2] = float(row[2])
  if max_temp<row[2]:
    max_date = row[0]
    max_temp = row[2]

f.close()
print(max_date,max_temp)

# csv 파일 불러오기
filename = '/content/drive/MyDrive/부산.csv'
import csv
f = open(filename, 'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
header = next(data)
min_temp = 999
min_date = ''
for row in data:
  if row[4] == '':
    row[4] = 999
  row[4] = float(row[4])
  if min_temp > row[4]:
    min_date = row[0]
    min_temp = row[4]

f.close()
print(min_date,min_temp)

import matplotlib.pyplot as plt
plt.plot([10,20,30,40])
plt.show()

import matplotlib.pyplot as plt
plt.plot([1,2,3,4],[12,43,25,15])
plt.show()

!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

import matplotlib.pyplot as plt
plt.rc('font', family="NanumBarunGothic")
plt.rcParams['axes.unicode_minus'] = False

import matplotlib.pyplot as plt
plt.title('플로팅')
plt.plot([10,20,30,40])
plt.show()

import matplotlib.pyplot as plt
plt.title('범례 넣기기')
plt.plot([10,20,30,40],label = '증가')
plt.plot([40,30,20,10],label = '감소')
plt.legend()
plt.show()

import matplotlib.pyplot as plt
plt.title('색상 바꾸기')
plt.plot([10,20,30,40],color = 'skyblue',label = '증가')
plt.plot([40,30,20,10],'red',label = '감소')
plt.legend()
plt.show()

import matplotlib.pyplot as plt
plt.title('선 스타일')
plt.plot([10,20,30,40],'r',linestyle='--',label = 'dashed')
plt.plot([40,30,20,10],'g',ls=':',label = 'dotted')
plt.legend()
plt.show()